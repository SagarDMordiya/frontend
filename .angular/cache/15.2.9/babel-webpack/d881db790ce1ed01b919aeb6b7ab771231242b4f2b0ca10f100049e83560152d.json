{"ast":null,"code":"var _class;\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BookService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"http://localhost:8080/books\";\n  }\n  getBooks() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  searchBook(id) {\n    return this.httpClient.get(this.baseUrl + '/' + id).pipe(catchError(this.handleError));\n  }\n  addBook(book) {\n    return this.httpClient.post();\n  }\n}\n_class = BookService;\n_class.ɵfac = function BookService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAAqBA,UAAU,QAAQ,MAAM;;;AAM7C,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAEtB,YAAO,GAAG,6BAA6B;EAFD;EAI9CC,QAAQ;IACN,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAS,IAAI,CAACC,OAAO,CAAC;EAClD;EAEAC,UAAU,CAACC,EAAO;IAChB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAO,IAAI,CAACC,OAAO,GAAC,GAAG,GAACE,EAAE,CAAC,CAACC,IAAI,CAACT,UAAU,CAAC,IAAI,CAACU,WAAW,CAAC,CAAC;EAC1F;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,EAAE;EAC/B;;SAhBWZ,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAa,SAAXb,MAAW;EAAAc,YAFV;AAAM","names":["catchError","BookService","constructor","httpClient","getBooks","get","baseUrl","searchBook","id","pipe","handleError","addBook","book","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Sagar Drive\\StudyMaterial\\Assessments\\Staples\\frontend\\src\\app\\book.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, catchError } from 'rxjs';\nimport { Book } from './book';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  \n  constructor(private httpClient: HttpClient) { }\n\n  private baseUrl = \"http://localhost:8080/books\";\n\n  getBooks(): Observable<Book[]> {\n    return this.httpClient.get<Book[]>(this.baseUrl);\n  }\n\n  searchBook(id: any): Observable<Book> {\n    return this.httpClient.get<Book>(this.baseUrl+'/'+id).pipe(catchError(this.handleError));\n  }\n\n  addBook(book: any) {\n    return this.httpClient.post()\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}